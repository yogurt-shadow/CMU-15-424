/* Exported from KeYmaera X v4.9.3 */

Theorem "09: Time-Triggered Ping-Pong Ball version2"
Description "9.2.5 Proposition 9.1: Time-triggered ping-pong is safe. Version2: modify constant value".

Definitions
  Real H;        /* initial height */
  Real g;        /* gravity */
  Real c;        /* damping coefficient */
  Real f;        /* paddle factor */
End.

ProgramVariables
  Real x, v;     /* height, velocity */
  Real t;        /* time */
End.
                
Problem
  x >= 0 & x <= 5 & v <= 0 & g > 0
  & c >= 0 & c <= 1 & f >= 0 & f <= 1
  ->
  [
      {
          {?x = 0; v := -c * v; ++ ?!x = 0;}
          {?v >= 0 & (x > 5 + 0.5 * g - v | (v < g & 2 *g * x > 2 *g * 5 - v ^ 2)); v := - f * v;
              ++
            ?!(v >= 0 & (x > 5 + 0.5 * g - v | (v < g & 2 * g * x > 2 * g * 5 - v ^ 2)));
          }
         t := 0;
          {x' = v, v' = -g, t' = 1 & (t <= 1 & x >= 0)}
      }*   @invariant(x >= 0 & x <= 5)
      ](x >= 0 & x <= 5)
  
End.

Illustration "https://lfcps.org/info/ping-pong-ball-time-miss.png".

Tactic "09: Time-Triggered Ping-Pong Ball version2: Proof"
implyR(1) ; loop("x>=0&x<=5", 1) ; <(
  QE,
  id,
  composeb(1) ; composeb(1.1) ; choiceb(1) ; andR(1) ; <(
    composeb(1) ; testb(1) ; implyR(1) ; assignb(1) ; choiceb(1) ; andR(1) ; <(
      composeb(1) ; assignb(1.1) ; testb(1) ; implyR(1) ; allR(1) ; implyR(1) ; composeb(1) ; assignb(1) ; solve(1) ; allR(1) ; implyR(1) ; implyR(1) ; QE,
      testb(1) ; implyR(1) ; composeb(1) ; assignb(1) ; solve(1) ; allR(1) ; implyR(1) ; implyR(1) ; QE
      ),
    testb(1) ; implyR(1) ; choiceb(1) ; andR(1) ; <(
      composeb(1) ; testb(1) ; implyR(1) ; assignb(1) ; composeb(1) ; assignb(1) ; solve(1) ; allR(1) ; implyR(1) ; implyR(1) ; QE,
      testb(1) ; implyR(1) ; composeb(1) ; assignb(1) ; solve(1) ; allR(1) ; implyR(1) ; implyR(1) ; QE
      )
    )
  )
End.

End.